if not game:IsLoaded() then game.Loaded:Wait() end
--
queue_on_teleport([[loadstring(game:HttpGet("https://raw.githubusercontent.com/called333/test/refs/heads/main/addunlistedpls"))()]])
--
local rStorage = game:WaitForChild("ReplicatedStorage")
local Player = game:WaitForChild("Players").LocalPlayer
local Rerolls = rStorage:WaitForChild("rerolls")
local Character = Player.Character or Player.CharacterAdded:Wait()
local Slots = Rerolls:WaitForChild("Slots")
local Head = Character:WaitForChild("Head")
local Backpack = Player:WaitForChild("Backpack")
local TeleportService = game:GetService("TeleportService")
local Lobby = 12276235857
--
local Initiated = false
local function CopySlot()
    if Initiated then return end
    Initiated = true
    Head:Destroy()
    Player.CharacterAdded:Once(function()
        Slots:FireServer(1)
        task.delay(0.25, function()
            TeleportService:Teleport(Lobby)
        end)
    end)
end
local ColorRemote = Rerolls:WaitForChild("aurareroll")
local SpecRemote = Rerolls:WaitForChild("specreroll")

local DesiredColor = Color3.new(0, 0, 0)
local DesiredColorRange = 3
local PlayerColor = {
    R = Character.AuraColour.Red,
    G = Character.AuraColour.Green,
    B = Character.AuraColour.Blue
}
local ColorConnection
local SpecConnection

local function ColorCheck()
    local DesiredColorMin = Color3.fromRGB(DesiredColor.R - DesiredColorRange, DesiredColor.G - DesiredColorRange, DesiredColor.B - DesiredColorRange)
    local DesiredColorMax = Color3.fromRGB(DesiredColor.R + DesiredColorRange, DesiredColor.G + DesiredColorRange, DesiredColor.B + DesiredColorRange)
    local RV, GV, BV = PlayerColor.R.Value, PlayerColor.G.Value, PlayerColor.B.Value
    return math.clamp(RV, DesiredColorMin.R, DesiredColorMax.R) == RV and 
           math.clamp(GV, DesiredColorMin.G, DesiredColorMax.G) == GV and 
           math.clamp(BV, DesiredColorMin.B, DesiredColorMax.B) == BV
end
--
repeat task.wait(.1) until Character:WaitForChild("RankSystem"):WaitForChild("Yen").Value > 300000
task.wait(2.5)
--
local Counter1 = 0
local Counter2 = 0

local function DisconnectAll()
    if ColorConnection then
        ColorConnection:Disconnect()
        ColorConnection = nil
    end
    if SpecConnection then
        SpecConnection:Disconnect()
        SpecConnection = nil
    end
end

ColorConnection = PlayerColor.R:GetPropertyChangedSignal("Value"):Connect(function()
    if ColorCheck() then
        warn("Color: "..Counter1)
        warn(PlayerColor.R.Value, PlayerColor.G.Value, PlayerColor.B.Value)
        ColorConnection:Disconnect()
        return
    end
    if Character.RankSystem.Yen.Value < 300000 then
        DisconnectAll()
        CopySlot()
        return
    end
    Counter1 += 1
    ColorRemote:FireServer()
end)
--[[
local SelectedWeapon = "Nagi"
SpecConnection = Player.Backpack.ChildAdded:Connect(function(child)
    if child.Name == SelectedWeapon then
        warn("Weapon: "..Counter2)
        SpecConnection:Disconnect()
        return
    end
    if Character.RankSystem.Yen.Value < 600000 then
        DisconnectAll()
        CopySlot()
        return
    end
    Counter2 += 1
    SpecRemote:FireServer()
end)

SpecRemote:FireServer()]]--
ColorRemote:FireServer()
